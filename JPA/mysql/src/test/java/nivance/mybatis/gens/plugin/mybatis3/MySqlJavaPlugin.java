package nivance.mybatis.gens.plugin.mybatis3;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;
import org.mybatis.generator.api.dom.java.JavaVisibility;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.Parameter;
import org.mybatis.generator.api.dom.java.TopLevelClass;

public class MySqlJavaPlugin extends PluginAdapter {

	@Override
	public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass,
            IntrospectedTable introspectedTable) {
//		for(Field field :topLevelClass.getFields()){
//			field.addAnnotation("@Nullable");
//		}
//		topLevelClass.addImportedType("org.apache.avro.reflect.Nullable");
        return true;
    }
	
	@Override
	public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass,
            IntrospectedTable introspectedTable) {
		for(Field field :topLevelClass.getFields()){
			field.addAnnotation("@Nullable");
		}
		topLevelClass.addImportedType("org.apache.avro.reflect.Nullable");
        return true;
    }
	
	@Override
	public boolean modelExampleClassGenerated(TopLevelClass topLevelClass,
			IntrospectedTable introspectedTable) {
		Field field = new Field();
		field.setName("offset");
		field.setType(FullyQualifiedJavaType.getIntInstance());
		field.setVisibility(JavaVisibility.PROTECTED);
		field.addJavaDocLine("/**");
		field.addJavaDocLine("* This method was generated by MyBatis Generator.");
		field.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		field.addJavaDocLine("*");
		DateFormat df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy",
				Locale.US);
		field.addJavaDocLine("* @generated " + df.format(new Date()));
		field.addJavaDocLine("*/");
		topLevelClass.addField(field);

		field = new Field();
		field.setName("limit");
		field.setType(FullyQualifiedJavaType.getIntInstance());
		field.setVisibility(JavaVisibility.PROTECTED);
		field.addJavaDocLine("/**");
		field.addJavaDocLine("* This method was generated by MyBatis Generator.");
		field.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		field.addJavaDocLine("*");
		df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
		field.addJavaDocLine("* @generated " + df.format(new Date()));
		field.addJavaDocLine("*/");
		topLevelClass.addField(field);

		Method method = new Method();
		method.setName("setOffset");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.addParameter(new Parameter(FullyQualifiedJavaType
				.getIntInstance(), "offset"));
		method.setReturnType(null);
		method.addBodyLine(" this.offset = offset;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*");
		df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
		method.addJavaDocLine("* @generated " + df.format(new Date()));
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("getOffset");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.setReturnType(FullyQualifiedJavaType.getIntInstance());
		method.addBodyLine("  return offset;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*");
		df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
		method.addJavaDocLine("* @generated " + df.format(new Date()));
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("setLimit");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.addParameter(new Parameter(FullyQualifiedJavaType
				.getIntInstance(), "limit"));
		method.setReturnType(null);
		method.addBodyLine(" this.limit = limit;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*");
		df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
		method.addJavaDocLine("* @generated " + df.format(new Date()));
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("getLimit");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.setReturnType(FullyQualifiedJavaType.getIntInstance());
		method.addBodyLine("  return limit;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*");
		df = new SimpleDateFormat("EEE MMM ww HH:mm:ss z yyyy", Locale.US);
		method.addJavaDocLine("* @generated " + df.format(new Date()));
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		field = new Field();
		field.setName("sumCol");
		field.setType(FullyQualifiedJavaType.getStringInstance());
		field.setVisibility(JavaVisibility.PROTECTED);
		field.addJavaDocLine("/**");
		field.addJavaDocLine("* This method was generated by MyBatis Generator.");
		field.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		field.addJavaDocLine("*/");
		topLevelClass.addField(field);

		method = new Method();
		method.setName("setSumCol");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.addParameter(new Parameter(FullyQualifiedJavaType
				.getStringInstance(), "sumCol"));
		method.setReturnType(null);
		method.addBodyLine(" this.sumCol = sumCol;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("getSumCol");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.setReturnType(FullyQualifiedJavaType.getStringInstance());
		method.addBodyLine("  return sumCol;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		field = new Field();
		field.setName("groupSelClause");
		field.setType(FullyQualifiedJavaType.getStringInstance());
		field.setVisibility(JavaVisibility.PROTECTED);
		field.addJavaDocLine("/**");
		field.addJavaDocLine("* This method was generated by MyBatis Generator.");
		field.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		field.addJavaDocLine("*/");
		topLevelClass.addField(field);

		method = new Method();
		method.setName("setGroupSelClause");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.addParameter(new Parameter(FullyQualifiedJavaType
				.getStringInstance(), "groupSelClause"));
		method.setReturnType(null);
		method.addBodyLine(" this.groupSelClause = groupSelClause;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("getGroupSelClause");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.setReturnType(FullyQualifiedJavaType.getStringInstance());
		method.addBodyLine("  return groupSelClause;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		field = new Field();
		field.setName("groupByClause");
		field.setType(FullyQualifiedJavaType.getStringInstance());
		field.setVisibility(JavaVisibility.PROTECTED);
		field.addJavaDocLine("/**");
		field.addJavaDocLine("* This method was generated by MyBatis Generator.");
		field.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		field.addJavaDocLine("*/");
		topLevelClass.addField(field);

		method = new Method();
		method.setName("setGroupByClause");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.addParameter(new Parameter(FullyQualifiedJavaType
				.getStringInstance(), "groupByClause"));
		method.setReturnType(null);
		method.addBodyLine(" this.groupByClause = groupByClause;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		method = new Method();
		method.setName("getGroupByClause");
		method.setVisibility(JavaVisibility.PUBLIC);
		method.setReturnType(FullyQualifiedJavaType.getStringInstance());
		method.addBodyLine("  return groupByClause;");
		method.addJavaDocLine("/**");
		method.addJavaDocLine("* This method was generated by MyBatis Generator.");
		method.addJavaDocLine("* This method corresponds to the database table "
				+ introspectedTable.getFullyQualifiedTableNameAtRuntime());
		method.addJavaDocLine("*/");
		topLevelClass.addMethod(method);

		List<Method> methods = topLevelClass.getMethods();
		for (Method mod : methods) {
			if (mod.getName().equals("clear")) {
				mod.addBodyLine("this.offset= 0;");
				mod.addBodyLine("this.limit= Integer.MAX_VALUE;");
				mod.addBodyLine("this.sumCol=null;");
				mod.addBodyLine("this.groupSelClause=null;");
				mod.addBodyLine("this.groupByClause=null;");
			}
			String examplename = introspectedTable.getExampleType().substring(
					introspectedTable.getExampleType().lastIndexOf(".") + 1);
			if (mod.getName().equals(examplename)) {
				mod.addBodyLine("offset = 0;");
				mod.addBodyLine("limit = Integer.MAX_VALUE;");
			}
		}
		return true;
	}
	

	@Override
	public boolean providerGenerated(TopLevelClass topLevelClass,
			IntrospectedTable introspectedTable) {
		//TODO providerGenerated
//		String tableName = introspectedTable.getTableConfiguration().getTableName();
		//----------------truncate provider---------------
//		Method method = new Method();
//		method.setName("truncate");
//		method.setVisibility(JavaVisibility.PUBLIC);
//	    method.setReturnType(null);
//	    method.addBodyLine("return \"truncate "+tableName+"\";");
//		topLevelClass.addMethod(method);
		//----------------truncate provider---------------
		return true;
	}
	
	@Override
	public boolean providerSelectByExampleWithBLOBsMethodGenerated(
            Method method, TopLevelClass topLevelClass,
            IntrospectedTable introspectedTable) {
		List<String> line = new ArrayList<String>();
		line.add("if(example != null){");
		line.add("return SQL().concat(\" limit \"+example.getOffset()+\",\"+example.getLimit());");
		line.add("}");
		int linesNumber = method.getBodyLines().size();
		method.addBodyLines(linesNumber-1, line);
        return true;
    }
	
	@Override
	public boolean providerSelectByExampleWithoutBLOBsMethodGenerated(
            Method method, TopLevelClass topLevelClass,
            IntrospectedTable introspectedTable) {
		List<String> line = new ArrayList<String>();
		line.add("if(example != null){");
		line.add("return SQL().concat(\" limit \"+example.getOffset()+\",\"+example.getLimit());");
		line.add("}");
		int linesNumber = method.getBodyLines().size();
		method.addBodyLines(linesNumber-1, line);
        return true;
    }
	
	@Override
	public boolean validate(List<String> warnings) {
		return true;
	}

}
